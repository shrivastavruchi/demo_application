exit
@message = @user.messages
@user.messages
@user = User.find(params[:user_id])
params[:user_id]
exit
@messages.first.user.first_name
@messages.first.user.name
@messages.first.user
@messages.first
@messages.firs
@messages = @user.messages
@message = @user.messages
@user.messages
@user.messages.map(&:message_box)
@user.messages
@user = User.find(params[:user_id])
User.find(params[:user_id])
params[:user_id]
params
c
@message = @user.messages.build(:receiver_id=>current_user.id,:message_box=>params[:message][:message_box])
@user.messages.build(:receiver_id=>current_user.id,:message_box=>params[:message][:message_box])
@user.messages.build(:sender_id=>current_user.id,:message_box=>params[:message][:message_box])
@user.messages.build(:sender_id=>current_user.id,params[:message][:message_box])
@user.messages.build
@user.messages
@user = User.find(params[:user_id])
params[:user_id]
params
exit
Message.new(:sender_id=>current_user.id,params[:messsage])
params[:user_id]
current_user
params
exit
<%= form_for(@message) do |f| %> <%=f.text_field  :message_box %>  <%end%>
<%= form_for(@message) do |f| %> <%=f.text_field  :message_box %> <%=f.submit 'save' %> <%end%>
<%= form_for(@message)   do |f| %> <%=f.text_field  :message_box %> <%=f.submit 'save' %> <%end%>
@message
c
@message
@message = Message.new
exit
Request.where(:receiver_id=>current_user.id)
Request.where(:receiver_id=>current_user.id).map(&:status)
Request.where(:receiver_id=>current_user.id).(&:status)
Request.where(:receiver_id=>current_user.id).map(&:sender_id)
Request.where(:receiver_id=>current_user.id).map(:sender_id)
Request.where(:receiver_id=>current_user.id)
Request.where(:receiver_id=>current_user.id,status=>"true").to_sys
Request.where(:receiver_id=>current_user.id,status=>"true")
Request.where(:receiver_id=>current_user.id,staus=>"true")
Request.where(:receiver_id=>current_user.id)
Request.where(:sender_id=>current_user.id)
current_user.requests.where(:status=>"true").map(&:sender_id)
current_user.requests.where(:status=>"true").map(&:receiver_id)
current_user
exit
@freind_users.third
@freind_users.second
@freind_users.first
@freind_users = User.where(:id=>@user)
@user = User.where(:id=>@user)
User.where(:id=>@user)
@user = (current_user.requests.where(:status=>"true").map(&:receiver_id) +  current_user.requests.where(:status=>"true").map(&:sender_id)).uniq
exit
(current_user.requests.where(:status=>"true").map(&:receiver_id) +  current_user.requests.where(:status=>"true").map(&:sender_id)).uniq
(current_user.requests.where(:status=>"true").map(&:receiver_id) +  current_user.requests.where(:status=>"true").map(&:sender_id)).unique
(current_user.requests.where(:status=>"true").map(&:receiver_id) +  current_user.requests.where(:status=>"true").map(&:sender_id))
current_user.requests.where(:status=>"true").map(&:receiver_id) +  current_user.requests.where(:status=>"true").map(&:sender_id))
current_user.requests.where(:status=>"true").map(&:receiver_id) +  current_user.requests.where(:status=>"true").map(&:receiver_id)
current_user.requests.where(:status=>"true").map(&:receiver_id)
current_user.requests.where(:status=>"true").map(:receiver_id)
current_user.requests.where(:status=>"true").pluck(:receiver_id)
current_user.requests.where(:status=>"true")
current_user.requests.where(:status=>true)
current_user.requests.where(:status=>"true")
current_user.requests
r.save
r.status = "true"
r = Request.find(2)
r.save
r.status = "true"
r = Request.find(1)
Request.find(1)
Request.all.where(:status=>"true")
Request.all.where(:status=>true)
Request.all
Request
current_user.requests.where(:status=>true)
current_user.requests.where(:satus=>true)
current_user.requests
current_user
exit
Request.find_by(:sender_id=>user.id).status == "nil" 
Request.find_by(:sender_id=>user.id).status == "false"
Request.find_by(:sender_id=>user.id).status == "true"
Request.find_by_sender_id(params[:id])
Request.find_by(:sender_id=>user.id)
c
exit
Request.find_by(:sender_id=>user.id).status == "true"
Request.find_by(:sender_id=>user.id).status = "true"
Request.find_by(:sender_id=>user.id)
exit
 Request.find_by_sender_id(params[:id])
 Request.find_by_id(params[:id])
exit
Request.find_by(:sender_id=>user.id).status == "true"
Request.find_by(:sender_id=>user.id)
exit
 @user.status == nil
@user.status == "nil"
@user.status == "true"
@user.status
@user =  Request.find_by_id(params[:id])
 Request.find_by_id(params[:id])
params
exit
Request.find_by(:sender_id=>user.id).status == "true"
Request.find_by(:sender_id=>user.id).last.status == "true"
Request.find_by(:sender_id=>user.id)
Request.find_by(:sender_id=>user)
params
exit
c
exit
Request.where(:receiver_id=>user.id)
Request
params
exit
@user = Request.find_by_id(params[:id])
params
exit
user.request
user.requests
user = User.find(13)
User.find(13)
user.find (13)
user.find (13)3
user.find 13
user.find13
user.find()13
Request.where(:receiver_id=>13)
.where("(categorisations.mars_consensus_user_id = ? OR categorisations.mars_consensus_user_id IS NULL) AND (categorisations.mars_discrepency = ?)", current_user.id, true)    
User.joins(:requests).where()
User.joins(:requests).where(:requests.user_id=>"true")
User.joins(:requests).where(requests.sender_id=>"true")
User.joins(:requests).where(:requests.sender_id=>"true")
User.joins(:requests)
User.join(:requests)
exit
current_user.requests.create(:receiver_id=>params[:id])
@user = User.find(params[:id])
